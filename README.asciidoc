== jpa-crud
:idprefix: id_ 
(choose one, do not modify, then add a second sentence with a brief description, starting with - "The jpa-crud addon enables blah blah...)
This addon provides *standalone* functionality.  The jpa-crud addon generates create, read, update and remove operations as
CDI beans for injection to your model logic.
        
=== Dependencies: None (or)
=== Depends on
[options="header"]
|===
|Addon |Exported |Optional
|DEP1
|yes
|no
|DEP2
|yes
|yes
|===

== Setup

This addon should be installed before using.

Setup jpa: jpa-setup.
Setup cdi: cdi-setup.
Create some jpa entities.
This addon requires jpa entities in the project.

== Features

Creates <Entity>Creator, <Entity>Finder, <Entity>Updater, and <Entity>Remover bean classes.

For example, assume a JPA entity named 'Person'.  The generated bean classes would be used as follows:

To create a Person and persist it:
+
[source,java]
----
@Inject PersonCreator creator;

creator.create(() -> {
		Person p = .....;
		return p;
	});
----
+

To find a Person
[source.java]
----
/**
 * a reusable custom query specification.
 */
class PersonByNameSpecification extends Specification<Person> {
	private String name;
	PersonByNameSpecification(String name) {
		this.name = name;
	}
	
	@Override
	public TypedQuery<Configuration> asQuery(EntityManager entityManager) {
		
		TypedQuery<Configuration> query = entityManager.createQuery("select c from Configuration c where c.name = :name", Configuration.class);
		query.setParameter("name", name);
		return query;
	}
}

@Inject PersonFinderListResult finder;
List<Person> people = finder.find(new PersonByNameSpecification("john"));
----
+

To remove a Person

[source.java]
----
@Inject
private PersonRemover remover;
Person person = ....;
remover.remove() -> person);

----
+

To update a Person

[source.java]
----
@Inject
private PersonUpdater updater;
Person detachedPerson = ....;
updater.update(() -> detachedPerson);

----
+

== Usage

Run inside forge with this command:
crud-generate --targets org.example.model.Person

